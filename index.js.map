{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '50500162-d9264b458cdacee071354b362';\nconst BASE_URL = 'https://pixabay.com/api/';\n\n/**\n * Searches for images using Pixabay API\n * @param {string} query - Search query\n * @returns {Promise} - Promise that resolves to the API response\n */\nexport function searchImages(query) {\n  const searchParams = {\n    key: API_KEY,\n    q: query,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: 'true',\n    per_page: 21,\n    min_width: 640,\n    min_height: 480,\n  };\n\n  return axios.get(BASE_URL, { params: searchParams })\n    .then(response => {\n      const data = response.data;\n      if (data.hits.length === 0) {\n        throw new Error('No images found');\n      }\n      return data;\n    });\n}\n","import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n/**\n * Creates HTML markup for a single image card\n * @param {Object} image - Image data from Pixabay API\n * @returns {string} - HTML string for the image card\n */\nexport function createImageCard(image) {\n  return `\n    <li class=\"gallery-item\">\n      <a class=\"gallery-link\" href=\"${image.largeImageURL}\">\n        <img\n          class=\"gallery-image\"\n          src=\"${image.webformatURL}\"\n          alt=\"${image.tags}\"\n          loading=\"lazy\"\n        />\n        <div class=\"info\">\n          <div class=\"info-item\">\n            <span class=\"info-label\">Likes</span>\n            <span class=\"info-value\">${image.likes}</span>\n          </div>\n          <div class=\"info-item\">\n            <span class=\"info-label\">Views</span>\n            <span class=\"info-value\">${image.views}</span>\n          </div>\n          <div class=\"info-item\">\n            <span class=\"info-label\">Comments</span>\n            <span class=\"info-value\">${image.comments}</span>\n          </div>\n          <div class=\"info-item\">\n            <span class=\"info-label\">Downloads</span>\n            <span class=\"info-value\">${image.downloads}</span>\n          </div>\n        </div>\n      </a>\n    </li>\n  `;\n}\n\n/**\n * Renders images to the gallery\n * @param {Array} images - Array of image objects from Pixabay API\n * @param {HTMLElement} galleryElement - Gallery container element\n */\nexport function renderImages(images, galleryElement) {\n  const markup = images.map(createImageCard).join('');\n  galleryElement.insertAdjacentHTML('beforeend', markup);\n}\n\n/**\n * Clears the gallery content\n * @param {HTMLElement} galleryElement - Gallery container element\n */\nexport function clearGallery(galleryElement) {\n  galleryElement.innerHTML = '';\n}\n\n/**\n * Shows the loading indicator\n * @param {HTMLElement} loaderElement - Loader element\n */\nexport function showLoader(loaderElement) {\n  loaderElement.style.display = 'flex';\n}\n\n/**\n * Hides the loading indicator\n * @param {HTMLElement} loaderElement - Loader element\n */\nexport function hideLoader(loaderElement) {\n  loaderElement.style.display = 'none';\n}\n\n/**\n * Shows error message using iziToast\n * @param {string} message - Error message to display\n */\nexport function showErrorMessage(message) {\n  iziToast.error({\n    title: 'Error',\n    message: message,\n    position: 'topRight',\n    timeout: 5000,\n  });\n}\n\n/**\n * Shows success message using iziToast\n * @param {string} message - Success message to display\n */\nexport function showSuccessMessage(message) {\n  iziToast.success({\n    title: 'Success',\n    message: message,\n    position: 'topRight',\n    timeout: 3000,\n  });\n}\n","// Import necessary modules\nimport { searchImages } from './js/pixabay-api.js';\nimport {\n  renderImages,\n  clearGallery,\n  showLoader,\n  hideLoader,\n  showErrorMessage,\n  showSuccessMessage,\n} from './js/render-functions.js';\n\n// Import SimpleLightbox\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\n// Get DOM elements\nconst searchForm = document.getElementById('search-form');\nconst searchInput = searchForm.querySelector('input[name=\"searchQuery\"]');\nconst gallery = document.getElementById('gallery');\nconst loader = document.getElementById('loader');\n\n// Initialize SimpleLightbox\nlet lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\n// Handle form submission\nsearchForm.addEventListener('submit', handleSearch);\n\n/**\n * Handles the search form submission\n * @param {Event} event - Form submit event\n */\nfunction handleSearch(event) {\n  event.preventDefault();\n\n  const query = searchInput.value.trim();\n\n  // Validate input\n  if (!query) {\n    showErrorMessage('Please enter a search query!');\n    return;\n  }\n\n  // Clear previous results\n  clearGallery(gallery);\n\n  // Show loader\n  showLoader(loader);\n\n  // Perform search\n  searchImages(query)\n    .then(data => {\n      // Hide loader\n      hideLoader(loader);\n\n      // Render images\n      renderImages(data.hits, gallery);\n\n      // Refresh SimpleLightbox\n      lightbox.refresh();\n\n      // Show success message\n      showSuccessMessage(`Found ${data.totalHits} images!`);\n\n      // Clear the search input\n      searchInput.value = '';\n    })\n    .catch(error => {\n      // Hide loader\n      hideLoader(loader);\n\n      // Show error message\n      if (error.message === 'No images found') {\n        showErrorMessage('Sorry, there are no images matching your search query. Please try again!');\n      } else {\n        showErrorMessage('Something went wrong. Please try again later.');\n        console.error('Search error:', error);\n      }\n    });\n}\n"],"names":["API_KEY","BASE_URL","searchImages","query","searchParams","axios","response","data","createImageCard","image","renderImages","images","galleryElement","markup","clearGallery","showLoader","loaderElement","hideLoader","showErrorMessage","message","iziToast","showSuccessMessage","searchForm","searchInput","gallery","loader","lightbox","SimpleLightbox","handleSearch","event","error"],"mappings":"owBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAOV,SAASC,EAAaC,EAAO,CAClC,MAAMC,EAAe,CACnB,IAAKJ,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,OACZ,SAAU,GACV,UAAW,IACX,WAAY,GAChB,EAEE,OAAOE,EAAM,IAAIJ,EAAU,CAAE,OAAQG,CAAY,CAAE,EAChD,KAAKE,GAAY,CAChB,MAAMC,EAAOD,EAAS,KACtB,GAAIC,EAAK,KAAK,SAAW,EACvB,MAAM,IAAI,MAAM,iBAAiB,EAEnC,OAAOA,CACb,CAAK,CACL,CCtBO,SAASC,EAAgBC,EAAO,CACrC,MAAO;AAAA;AAAA,sCAE6BA,EAAM,aAAa;AAAA;AAAA;AAAA,iBAGxCA,EAAM,YAAY;AAAA,iBAClBA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAMYA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,uCAIXA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,uCAIXA,EAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,uCAIdA,EAAM,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,GAMtD,CAOO,SAASC,EAAaC,EAAQC,EAAgB,CACnD,MAAMC,EAASF,EAAO,IAAIH,CAAe,EAAE,KAAK,EAAE,EAClDI,EAAe,mBAAmB,YAAaC,CAAM,CACvD,CAMO,SAASC,EAAaF,EAAgB,CAC3CA,EAAe,UAAY,EAC7B,CAMO,SAASG,EAAWC,EAAe,CACxCA,EAAc,MAAM,QAAU,MAChC,CAMO,SAASC,EAAWD,EAAe,CACxCA,EAAc,MAAM,QAAU,MAChC,CAMO,SAASE,EAAiBC,EAAS,CACxCC,EAAS,MAAM,CACb,MAAO,QACP,QAASD,EACT,SAAU,WACV,QAAS,GACb,CAAG,CACH,CAMO,SAASE,EAAmBF,EAAS,CAC1CC,EAAS,QAAQ,CACf,MAAO,UACP,QAASD,EACT,SAAU,WACV,QAAS,GACb,CAAG,CACH,CCnFA,MAAMG,EAAa,SAAS,eAAe,aAAa,EAClDC,EAAcD,EAAW,cAAc,2BAA2B,EAClEE,EAAU,SAAS,eAAe,SAAS,EAC3CC,EAAS,SAAS,eAAe,QAAQ,EAG/C,IAAIC,EAAW,IAAIC,EAAe,aAAc,CAC9C,aAAc,MACd,aAAc,GAChB,CAAC,EAGDL,EAAW,iBAAiB,SAAUM,CAAY,EAMlD,SAASA,EAAaC,EAAO,CAC3BA,EAAM,eAAc,EAEpB,MAAM1B,EAAQoB,EAAY,MAAM,KAAI,EAGpC,GAAI,CAACpB,EAAO,CACVe,EAAiB,8BAA8B,EAC/C,MACD,CAGDJ,EAAaU,CAAO,EAGpBT,EAAWU,CAAM,EAGjBvB,EAAaC,CAAK,EACf,KAAKI,GAAQ,CAEZU,EAAWQ,CAAM,EAGjBf,EAAaH,EAAK,KAAMiB,CAAO,EAG/BE,EAAS,QAAO,EAGhBL,EAAmB,SAASd,EAAK,SAAS,UAAU,EAGpDgB,EAAY,MAAQ,EAC1B,CAAK,EACA,MAAMO,GAAS,CAEdb,EAAWQ,CAAM,EAGbK,EAAM,UAAY,kBACpBZ,EAAiB,0EAA0E,GAE3FA,EAAiB,+CAA+C,EAChE,QAAQ,MAAM,gBAAiBY,CAAK,EAE5C,CAAK,CACL"}